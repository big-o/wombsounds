#!/usr/bin/env python3

import sys
import os
import shutil
import signal
from argparse import ArgumentParser
from configparser import ConfigParser
from youtube_dl import YoutubeDL
import pygame


class AudioSource(object):
    def __init__(self, **kwargs):
        self._file = kwargs['location']
        if not os.path.exists(self._file):
            self._get_audio(kwargs['source'])

        pygame.mixer.pre_init(44100, -16, 1, 512)
        pygame.mixer.init()
        self._music = pygame.mixer.Sound(self._file)

    def _get_audio(self, src):
        '''Obtain the audio recording for the application.

        Arguments:

        src: e.g. `youtube:<video id>' or `file:/path/to/audio.ogg
        '''

        try:
            src_type, src_id = src.split(':')
        except ValueError:
            raise ValueError("Invalid source `{src}'. must be of the format `type:id'")

        if src_type == 'file':
            shutil.copy(src_id, self._file)
        elif src_type == 'youtube':
            tmpfile = '/tmp/.wombsounds.ogg'
            youtube = YoutubeDL({
                'verbose': True,
                'format': 'bestaudio/best',
                'outtmpl': tmpfile,
                'postprocessors': [{
                    'key': 'FFmpegExtractAudio',
                    'preferredcodec': 'vorbis',
                    'preferredquality': '192',
                    'nopostoverwrites': True
                }]
            })

            youtube.download(['https://www.youtube.com/watch?v={video_id}'.format(video_id=src_id)])
            os.rename(tmpfile, self._file)

    def play(self, **kwargs):
        self._music.play(loops=-1, fade_ms=4000)

    def playing(self):
        return pygame.mixer.get_busy()

    def stop(self, **kwargs):
        self._music.fadeout(10000)
        while self.playing():
            continue


def main():
    parser = ArgumentParser(description='Create a soothing womb sound player daemon to help babies sleep')
    parser.add_argument(
        '-c', '--config',
        help='Config file location',
        default='/etc/wombsounds/wombsounds.conf'
    )
    args = parser.parse_args()

    config = ConfigParser()
    config.read(args.config)

    audio_file = config.get('audio', 'file', fallback='/etc/wombsounds/wombsounds.ogg')
    audio_source = config.get('audio', 'source', fallback='youtube:tycKhXaYw8Q')
    audio = AudioSource(location=audio_file, source=audio_source)

    def exit(signum, fname):
        print('caught sig %s' % str(signum), file=sys.stderr)
        audio.stop()
        sys.exit()

    for signum in (signal.SIGHUP, signal.SIGINT, signal.SIGTERM):
        signal.signal(signum, exit)

    audio.play()
    while audio.playing():
        continue


if __name__ == '__main__':
    main()
